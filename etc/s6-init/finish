#!/bin/execlineb -S0

# This is the shutdown script, running as process 1.

# Set linefeed mode to avoid staircase effect.
foreground { /bin/stty onlcr }

# Make sure we have no open handle to anywhere else
# than /dev/console
cd /
fdclose 0
redirfd -w 1 /dev/console
fdmove -c 2 1

# Start a sync in the background as the shutdown gets going
background { /bin/sync }

foreground { /etc/s6-init/cleanup }

foreground { echo "Syncing disks." }
foreground { /bin/sync } # yes, it helps.
foreground { echo "Unmounting disks." }

# Log to WTMP
foreground { echo "Log ${1} to wtmp." }
foreground { /sbin/${1} -w }

# Clear locks
foreground {
  if { test -d /var/lock/subsys }
  /bin/sh -c "/usr/bin/rm -f /var/lock/subsys/*" }

# Turnoff swap
foreground { echo "Turning off swap." }
foreground { /sbin/swapoff -a }
foreground { /bin/sync }

# Unmount filesystems
foreground { echo "Unmounting local file systems." }
foreground { /bin/umount -v -a -t no,proc,sysfs,tmpfs }

foreground { echo "Remounting root filesystem read-only." }
foreground { /bin/mount -v -n -o remount,ro / }

# This never hurts:
foreground { /bin/sync }

# FIXME cryptsetup?
#if [ -f /etc/crypttab -a -x /sbin/cryptsetup ]; then
#  cat /etc/crypttab | grep -v "^#" | grep -v "^$" | while read line; do
#    # NOTE: we only support LUKS formatted volumes (except for swap)!
#    LUKS=$(echo $line | tr '\t' ' ' | tr -s ' ' | cut -f1 -d' ')
#    DEV=$(echo $line | tr '\t' ' ' | tr -s ' ' | cut -f2 -d' ')
#    OPTS=$(echo $line | tr '\t' ' ' | tr -s ' ' | cut -f4 -d' ')
#    if /sbin/cryptsetup isLuks $DEV 2>/dev/null ; then
#      echo "Locking LUKS crypt volume '${LUKS}':"
#      /sbin/cryptsetup luksClose ${LUKS}
#    elif echo $OPTS | grep -wq swap ; then
#      # If any of the volumes was used as encrypted swap,
#      # then run mkswap on the underlying device -
#      # in case other Linux installations on this computer should use it:
#      echo "Erasing encrypted swap '${LUKS}' and restoring normal swap on ${DEV}:"
#      /sbin/cryptsetup remove ${LUKS}
#      mkswap $DEV
#    fi
#  done
#fi

# Deactivate LVM volume groups:
foreground {
  if { test -r /etc/lvmtab -o -d /etc/lvm/backup }
  foreground { echo "Deactivating LVM volume groups:" }
  /sbin/vgchange -an --ignorelockingfailure }

# This never hurts again (especially since root-on-LVM always fails
# to deactivate the / logical volume...  but at least it was
# remounted as read-only first)
foreground { /bin/sync }

# sleep 3 fixes problems with some hard drives that don't
# otherwise finish syncing before reboot or poweroff
foreground { /bin/sleep 3 }

# This is to ensure all processes have completed on SMP machines:
foreground { echo "Waiting for child processes to exit." }
wait { }

# FIXME genpowered?
#if [ -x /sbin/genpowerd ]; then
#  # See if this is a powerfail situation:
#  if /bin/egrep -q "FAIL|SCRAM" /etc/upsstatus 2> /dev/null ; then
#    # Signal UPS to shut off the inverter:
#    /sbin/genpowerd -k
#    if [ ! $? = 0 ]; then
#      echo
#      echo "There was an error signaling the UPS."
#      echo "Perhaps you need to edit /etc/genpowerd.conf to configure"
#      echo "the serial line and UPS type."
#      # Wasting 15 seconds of precious power:
#      /bin/sleep 15
#    fi
#  fi
#fi

# Reboot, halt or poweroff the machine, depending on the parameter
# that was given to the script.
foreground { echo "\nPerforming "${1}"." }
${1} -df
