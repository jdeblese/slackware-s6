#!execlineb -P

# This file is the first program run at boot time,
# as process 1.
# Edit it to suit your needs.

multisubstitute {
  define DIR /svc
  define SRC /etc/svc }

export S6DIR ${DIR}
export S6SRC ${SRC}

# Make sure everything is sane and ignore input
cd /
umask 022
#fdclose 0

foreground { if -n { test -e /dev/null } /usr/bin/mknod -m 666 /dev/null c 1 3 }
foreground { if -n { test -e /dev/console } /usr/bin/mknod -m 600 /dev/console c 5 1 }

# This should be printed to the console
if { s6-echo "init stage 1" }


# Mount a tmpfs on /svc
if { s6-echo "Mount /svc" }
if { /sbin/mount -vt tmpfs -o size=16m tmpfs ${DIR} }

# Copy essential services
if { s6-echo "Create tty1 and catch-all logger..." }
if { cp -a ${SRC}/.s6-svscan ${DIR} }
#if { cp -a ${SRC}/tty1 ${DIR} }
if { cp -a ${SRC}/svscanlog ${DIR} }

# Close remaining handles to /dev/console
#fdclose 1
#fdclose 2

# Now no process has any open fd to /dev/console (or to
# anything for that matter).
# We can safely overwrite the minimal /dev with the real one.

# *Fix /dev and /tmp*

# Now we have a working /dev and /tmp, and a minimal writable /service
# with a catch-all logger and a getty. We're good for stage 2 !

# Load the general environment
#s6-envdir /etc/s6-init/env

# Fork the "init-stage2" script 
# Have it ready to start as soon as the catch-all logger is in place
background
{
  s6-setsid

  # Run initial setup
  if { /etc/rc.d/rc.S }

  # Proc should be mounted, so we can fix ctrl-alt-del handling
  # CFR: https://www.kernel.org/doc/Documentation/sysctl/kernel.txt
  #   0 - send SIGINT to init(1)
  # > 0 - immediate reboot without sync
  foreground { redirfd -w 1 /proc/sys/kernel/ctrl-alt-del echo "0" }

  # create S6 cgroup
  foreground {
    if { mkdir /sys/fs/cgroup/s6 }
    mount -t cgroup cgroup /sys/fs/cgroup/s6 -o name=s6,none }

  # Make varous mounts visible to mount
  foreground { redirfd -c 1 /etc/mtab grep "^tmpfs ${DIR}" /proc/mounts }
  # NOTE These should not be umounted at shutdown, so don't add them
  # foreground { redirfd -c 1 /etc/mtab grep "^devtmpfs" /proc/mounts }
  # foreground { redirfd -c 1 /etc/mtab grep "^devpts" /proc/mounts }
  # foreground { redirfd -c 1 /etc/mtab grep "^cgroup_root" /proc/mounts }

  # Screen blanks after 15 minutes idle time, and powers down in one hour
  # if the kernel supports APM or ACPI power management:
  foreground { /bin/setterm -blank 15 -powersave powerdown -powerdown 60 }

  # Start initial terminal
  if { cp -a ${SRC}/tty1 ${DIR} }
  if { s6-svscanctl -a ${DIR} }

  # Run multi-user setup, logging to file
  fdclose 1
  fdclose 2
  redirfd -w 1 ${DIR}/svscanlog/fifo # (blocks until the logger reads)
  fdmove -c 2 1
  /etc/rc.d/rc.M
}
unexport LASTPID

# Reopen stdin/stdout/stderr and make them point to the right places
redirfd -r 0 /dev/null
if { s6-mkfifo ${DIR}/svscanlog/fifo }
redirfd -wnb 1 ${DIR}/svscanlog/fifo # (black magic: doesn't block)
fdmove -c 2 1

# Clear the environment (including PATH!)
# exec -c

# Replace argv[0] with s6-svscan
exec -a s6-svscan

# Run s6-svscan
s6-svscan -t 0 ${DIR}
